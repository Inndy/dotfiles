snippet main
int main(int argc, char *argv[])
{
	$1
	return 0;
}
endsnippet

snippet wmain
#include <wchar.h>

int wmain(int argc, wchar_t *argv[])
{
	$1
	return 0;
}
endsnippet

snippet dllmain
#include <windows.h>

BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
{
	switch(fdwReason) {
		case DLL_PROCESS_ATTACH:
			$1
			break;
		case DLL_PROCESS_DETACH:
			break;
		case DLL_THREAD_ATTACH:
			break;
		case DLL_THREAD_DETACH:
			break;
	}
	return TRUE;
}
endsnippet

snippet winmain
#include <windows.h>

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
{
	$1
	return 0;
}
endsnippet

snippet wininc
#include <winternl.h>
#include <windows.h>
endsnippet

snippet stdinc
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
endsnippet

snippet msgbox
MessageBoxW(NULL, L"$1", L"$2", MB_ICONINFORMATION | MB_SETFOREGROUND);
endsnippet

snippet msgboxa
MessageBoxA(NULL, "$1", "$2", MB_ICONINFORMATION | MB_SETFOREGROUND);
endsnippet

snippet for
for(int i = 0; i < $1; i++) {
	$2
}
endsnippet

snippet wpf
wprintf(L"$1", $2);
endsnippet

snippet pf
printf(L"$1", $2);
endsnippet

snippet createthread
${3:HANDLE hThread = }CreateThread(NULL, 0, $1, ${2:NULL}, 0, ${4:NULL});
endsnippet
